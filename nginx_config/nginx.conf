user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        off;

    keepalive_timeout  60;

    #gzip  on;

    # SSL settings.
    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2; # Omit SSLv3 because of POODLE (CVE-2014-3566).
    ssl_dhparam               /etc/nginx/ssl/dhparams.pem;
    ssl_ciphers               'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-CAMELLIA256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:DHE-RSA-CAMELLIA128-SHA:DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    ssl_stapling              on;
    ssl_session_cache         shared:SSL:50m;
    ssl_stapling_verify       on;
    ssl_ecdh_curve            secp384r1;
    resolver                  8.8.8.8;

    # Prepare the server to receive LetsEncrypt requests.
    server {
        listen 80 default_server;
        server_name _;

        root /usr/share/nginx/html;

        # Do not redirect LetsEncrypt requests.
        location /.well-known/ {}
        location /.well-known/acme-challange/ {}

        # Redirect the default location to https.
        location / {
            return 301 https://$host$request_uri;
        }
    }
    include /etc/nginx/conf.d/*.conf;
}